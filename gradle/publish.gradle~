
task xbibUpload(type: Upload) {
    configuration = configurations.archives
    uploadDescriptor = true
    repositories {
        if (project.hasProperty("xbibUsername")) {
            mavenDeployer {
                configuration = configurations.wagon
                repository(url: uri('scpexe://xbib.org/repository')) {
                        authentication(userName: xbibUsername, privateKey: xbibPrivateKey)
                }
            }
        }
    }
}

task sonaTypeUpload(type: Upload) {
    configuration = configurations.archives
    uploadDescriptor = true
    repositories {
        if (project.hasProperty('ossrhUsername')) {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                repository(url: uri(ossrhReleaseUrl)) {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                }
                snapshotRepository(url: uri(ossrhSnapshotUrl)) {
                        authentication(userName: ossrhUsername, password: ossrhPassword)
                }
                pom.project {
                    name pluginName
                    description pluginDescription
                    packaging 'jar'
                    inceptionYear '2012'
                    url scmUrl
                    organization {
                        name 'xbib'
                        url 'http://xbib.org'
                    }
                    developers {
                        developer {
                            id user
                            name 'JÃ¶rg Prante'
                            email 'joergprante@gmail.com'
                            url 'https://github.com/jprante'
                        }
                    }
                    scm {
                        url scmUrl
                        connection scmConnection
                        developerConnection scmDeveloperConnection
                    }
                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                }
            }
        }
    }
}

if (project.hasProperty('githubToken')) {
    github {
        owner = user
        token = githubToken
        repo = project.name
        name = project.version
        tagName = project.version
        targetCommitish = 'master'
        assets = [
                "build/distributions/${project.name}-${project.version}-plugin.zip"
        ]
    }
    githubRelease {
        dependsOn gitRelease, buildPluginZip
    }
}